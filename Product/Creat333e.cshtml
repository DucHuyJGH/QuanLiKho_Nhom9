@model QLK.Website.Model.Product
@{
    ViewBag.Title = "Thêm mới mặt hàng";
}
<head>
    <style>
        .main1 {
            background-color: #dddddd;
            min-height: 300px;
            padding: 7.5px 15px;
        }
    </style>
</head>

<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <!-- Form Element sizes -->
        <div class="box box-success">
            <div class=" with-border">
                <h3 class="box-title">@ViewBag.Title</h3>
            </div>
            <div class="box-body">
                <div class="coloer-create">
                    @using (Html.BeginForm("Create", "Product", FormMethod.Post,
                                              new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, "Mã loại hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                @*@Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })*@
                                @*@Html.DropDownListFor(model => model.CategoryID, new SelectList(Model.Catellection, "CategoryID", "CategoryName", "--select--"))*@
                                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownList("CategoryID", new SelectList(ViewBag.Category, "CategoryID", "CategoryName"), new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                <i style="color:red;">@ViewBag.error</i>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductID, "Mã mặt hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplierID, "Nhà cung cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                @Html.DropDownList("SupplierID", new SelectList(ViewBag.Supplier, "SupplierID", "SupplierName"), new { @class = "form-control", required = "required" })
                                @*@Html.EditorFor(model => model.SupplierID, new { htmlAttributes = new { @class = "form-control" } })*@
                                @*@Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductName, "Tên mặt hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                @*@Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control", required = "required" })*@
                                @*@Html.DropDownListFor(model => model.ProductID, new SelectList(Model.ProCollection, "ProductID", "ProductName", "--select--"))*@
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Unit, "Đơn vị tính ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Photo, "Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 has-success">
                                <input type="file" name="file" id="file" style="width:100%;" />
                                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class=" text-center col-md-6">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                            <div class="btn btn-danger">
                                @Html.ActionLink("Trở về", "Index")

                            </div>
                        </div>

                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
